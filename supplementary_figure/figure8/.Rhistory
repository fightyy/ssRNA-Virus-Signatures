test_df <- new_grouped_df  %>% filter(family == order_name)
host_vector <- unique(test_df$corrected_host)
if (length(host_vector) <=1) {
next
}
host_combine <- combn(host_vector, 2)
print(host_combine)
for (index in rep(1:ncol(host_combine),1)) {
# print(index)
host_name <-  host_combine[, index]
matrix <- test_df %>% filter(corrected_host %in% host_name) %>% ungroup() %>% select(3:194)
cosine_similarity <- proxy::simil(x = matrix[1,]/sum(matrix[1,]), y = matrix[2,]/sum(matrix[2,]), method = "cosine")
result_df <- c(order_name, host_name[1], host_name[2], cosine_similarity)
order_test_df <- rbind(order_test_df, result_df)
}
}
colnames(order_test_df) <- c("order", "hostA", "hostB",  "cosine_similarity")
order_test_df <- as.data.frame(order_test_df)
order_test_df <- rownames_to_column(order_test_df, var = "rowname") %>% select(-rowname) %>%
mutate_at("cosine_similarity", as.numeric)
return(order_test_df )
}
#按照family和宿主合并病毒突变谱
family_grouped_df <- all_corrected_df %>%
filter(corrected_host != "Others") %>%
group_by(corrected_host, family) %>%
summarise_at(colnames(data_df)[8:199],sum)
family_grouped_df_100 <- family_grouped_df %>% ungroup() %>% filter(rowSums(select(., 3:194))>100)
family_df_100 <-fisher_test_host(family_grouped_df_100)
#write_csv(family_df_100 ,"family_different_host.csv")
family_df_100
p1 <- ggplot(family_df_100, aes(x = factor(order), y = cosine_similarity)) +
geom_boxplot(outlier.color=NA) +
geom_point(
position=position_jitter(width = 0.2), # jitter for h-dist, dodge for grouped dists
pch=21, #圆形
size=1,
fill = "#F39B7FFF")+
labs(
x = "Viral family",
y = "Pairwise cosine similarity \n between hosts' mutation spectra")+
my_theme()+
theme(
axis.text.x = element_text(angle = 45, hjust = 1))
p1
###host相同，family不同
calculate_similarity_host <- function (new_grouped_df) {
order_vector <- new_grouped_df$corrected_host %>% unique()
order_test_df <- c()
for (host_name in order_vector ) {
test_df <- new_grouped_df  %>% filter(corrected_host == host_name)
family_vector <- unique(test_df$family)
if (length(family_vector) <=1) {
next
}
family_combine <- combn(family_vector, 2)
# print(family_combine)
for (index in rep(1:ncol(family_combine),1)) {
# print(index)
family_name <- family_combine[, index]
matrix <- test_df %>% filter(family %in% family_name ) %>% ungroup() %>% select(3:194)
# print(matrix)
cosine_similarity <- proxy::simil(x = matrix[1,]/sum(matrix[1,]), y = matrix[2,]/sum(matrix[2,]), method = "cosine")
result_df <- c(host_name, family_name[1], family_name[2], cosine_similarity)
order_test_df <- rbind(order_test_df, result_df)
}
}
colnames(order_test_df) <- c("host", "familyA", "familyB", "cosine_similarity")
order_test_df <- as.data.frame(order_test_df)
order_test_df <- rownames_to_column(order_test_df, var = "rowname") %>% select(-rowname) %>%
mutate_at("cosine_similarity", as.numeric)
return(order_test_df )
}
host_df_100  <- calculate_similarity_host(family_grouped_df_100)
host_df100   <- host_df_100 %>% filter(! order == "Monkeypox_virus")
host_df_100  <- calculate_similarity_host(family_grouped_df_100)
host_df_100   <- host_df_100 %>% filter(! order == "Monkeypox_virus")
View(host_df_100)
p2 <- ggplot(host_df_100 , aes(x = factor(host), y = cosine_similarity)) +
geom_boxplot(outlier.color=NA) +
geom_point(fill = "#F39B7FFF",
position=position_jitter(width = 0.2), # jitter for h-dist, dodge for grouped dists
pch=21, #圆形
size=2)+
scale_x_discrete(labels=c("Aves", "Homo sapiens",
"Insecta", "Mammalia"))+
labs(
x = "Host",
y = "Pairwise cosine similarity between \n species' mutation spectrums")+
my_theme()+
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
)
p2
p2 <- ggplot(host_df_100 , aes(x = factor(host), y = cosine_similarity)) +
geom_boxplot(outlier.color=NA) +
geom_point(
position=position_jitter(width = 0.2), # jitter for h-dist, dodge for grouped dists
pch=21, #圆形
size=1,
fill = "#F39B7FFF")+
scale_x_discrete(labels=c("Aves", "Homo sapiens",
"Insecta", "Mammalia", "Reptilia"))+
labs(
x = "Host",
y = "Pairwise cosine similarity \n between families' mutation spectra")+
my_theme()+
ylim(0.2, 0.9)+
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
)
p2
unique(host_df_100$host)
p2 <- ggplot(host_df_100 , aes(x = factor(host), y = cosine_similarity)) +
geom_boxplot(outlier.color=NA) +
geom_point(
position=position_jitter(width = 0.2),
pch=21, #圆形
size=1,
fill = "#F39B7FFF")+
scale_x_discrete(labels=c("Aves", "Homo sapiens",
"Insecta", "Mammalia", "Reptilia"))+
labs(
x = "Host",
y = "Pairwise cosine similarity \n between families' mutation spectra")+
my_theme()+
#ylim(0.2, 0.9)+
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
)
p2
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure1/spectrum_similarity_family.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure1/spectrum_similarity_family.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure1/spectrum_similarity_family.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure1/spectrum_pca_192_family.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure1/spectrum_pca_192_family.R", echo=TRUE)
library(tidyverse)
library(ggfortify)
library(factoextra)
library(this.path)
library(parallel)
library("ggsci")
setwd(this.dir())
source("../../bin/theme_setup.R")
df <- read_tsv("../../data/context_all_signature_sample_csv.txt")
data_df <- df  %>% mutate(family = gsub("viridae", "", family)) %>% filter(host != "Others")
num_cores=5
df_normalized <- mclapply(seq_len(nrow(data_df)), function(i) {
row <- data_df[i, ]
row[-(1:6)] <- row[-(1:6)] / sum(row[-(1:6)])
return(row)
}, mc.cores = num_cores)
df_normalized <- do.call(rbind, df_normalized)
family_vector <- c("Arena", "Filo", "Hanta", "Orthomyxo","Paramyxo", "Peribunya",
"Phenui", "Rhabdo", "Calici", "Corona", "Flavi","Picorna", "Toga")
balti_dict <- setNames(c(rep("-ssRNA", times = 8), rep("+ssRNA", times = 5)),family_vector)
df_normalized <- df_normalized %>% filter(family != "Pox") %>% rowwise() %>%
mutate(baltimore_class= balti_dict[[family]]) %>% select(baltimore_class,everything())
pca_df <- df_normalized[,(ncol(df_normalized)-191):ncol(df_normalized)]
pca_result <- prcomp(pca_df)
pc1 <- pca_result$sdev[1]^2 / sum(pca_result$sdev^2)
pc2 <- pca_result$sdev[2]^2 / sum(pca_result$sdev^2)
fviz_eig(pca_result)
fviz_pca_var(pca_result,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
ggsave("all_192_01_genomic_pca_loading.png")
pca_plot_data <- as_tibble(get_pca_ind(pca_result)$coord) %>%
select("Dim.1", "Dim.2") %>%
cbind(df_normalized[,1:(ncol(df_normalized)-192)])
# 使用 ggplot 绘制散点图，根据 species 设置颜色
p2 <- ggplot(pca_plot_data, aes(x = Dim.1, y = Dim.2)) +
geom_point(aes(color = host,shape=baltimore_class),alpha=0.7,size=0.5) +
scale_shape_manual(values = c("-ssRNA" = 16,
"+ssRNA" = 17))+
scale_color_npg(labels=c("Aves", "Homo sapiens",
"Insecta", "Mammalia", "Reptilia"))+
labs(x = paste("PC1","(",round(pc1*100,1),"%)",sep="") , y = paste("PC2","(",round(pc2*100,1),"%)",sep="")) +
my_theme()+
labs(color="Host",
shape="Baltimore class")
p2
ggsave("all_192_03_genomic_host_pca.pdf",width = 8, height = 6, units = "cm",dpi = 300)
mypal <- pal_npg("nrc")(10)
mypal <- c(mypal, c("#4DAF4A" , "#999999" , "#A65628"))
p3 <- ggplot(pca_plot_data, aes(x = Dim.1, y = Dim.2)) +
geom_point(aes(color = family,shape=baltimore_class),alpha=0.7,size=0.5) +
scale_shape_manual(values = c("-ssRNA" = 16,
"+ssRNA" = 17))+
scale_color_manual(values = mypal)+
labs(x = paste("PC1","(",round(pc1*100,1),"%)",sep="") , y = paste("PC2","(",round(pc2*100,1),"%)",sep="")) +
my_theme()+
labs(color="Viral family",
shape="Baltimore class")
p3
data_df <- df  %>% mutate(family = gsub("viridae", "", family)) %>% filter(host != "Others")
num_cores=5
df_normalized <- mclapply(seq_len(nrow(data_df)), function(i) {
row <- data_df[i, ]
row[-(1:6)] <- row[-(1:6)] / sum(row[-(1:6)])
return(row)
}, mc.cores = num_cores)
df_normalized <- do.call(rbind, df_normalized)
family_vector <- c("Arena", "Filo", "Hanta", "Orthomyxo","Paramyxo", "Peribunya",
"Phenui", "Rhabdo", "Calici", "Corona", "Flavi","Picorna", "Toga")
balti_dict <- setNames(c(rep("-ssRNA", times = 8), rep("+ssRNA", times = 5)),family_vector)
df_normalized <- read_csv("pca_df_csv.csv") %>% filter(host != "internal")
View(df_normalized)
df_normalized <- df_normalized %>% filter(host != "internal")
df_normalized <- df_normalized %>% filter(family != "Pox") %>% rowwise() %>%
mutate(baltimore_class= balti_dict[[family]]) %>% select(baltimore_class,everything())
pca_df <- df_normalized[,(ncol(df_normalized)-191):ncol(df_normalized)]
pca_result <- prcomp(pca_df)
pc1 <- pca_result$sdev[1]^2 / sum(pca_result$sdev^2)
pc2 <- pca_result$sdev[2]^2 / sum(pca_result$sdev^2)
fviz_eig(pca_result)
fviz_pca_var(pca_result,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
ggsave("all_192_01_genomic_pca_loading.png")
pca_plot_data <- as_tibble(get_pca_ind(pca_result)$coord) %>%
select("Dim.1", "Dim.2") %>%
cbind(df_normalized[,1:(ncol(df_normalized)-192)])
# 使用 ggplot 绘制散点图，根据 species 设置颜色
p2 <- ggplot(pca_plot_data, aes(x = Dim.1, y = Dim.2)) +
geom_point(aes(color = host,shape=baltimore_class),alpha=0.7,size=0.5) +
scale_shape_manual(values = c("-ssRNA" = 16,
"+ssRNA" = 17))+
scale_color_npg(labels=c("Aves", "Homo sapiens",
"Insecta", "Mammalia", "Reptilia"))+
labs(x = paste("PC1","(",round(pc1*100,1),"%)",sep="") , y = paste("PC2","(",round(pc2*100,1),"%)",sep="")) +
my_theme()+
labs(color="Host",
shape="Baltimore class")
p2
ggsave("all_192_03_genomic_host_pca.pdf",width = 8, height = 6, units = "cm",dpi = 300)
mypal <- pal_npg("nrc")(10)
mypal <- c(mypal, c("#4DAF4A" , "#999999" , "#A65628"))
p3 <- ggplot(pca_plot_data, aes(x = Dim.1, y = Dim.2)) +
geom_point(aes(color = family,shape=baltimore_class),alpha=0.7,size=0.5) +
scale_shape_manual(values = c("-ssRNA" = 16,
"+ssRNA" = 17))+
scale_color_manual(values = mypal)+
labs(x = paste("PC1","(",round(pc1*100,1),"%)",sep="") , y = paste("PC2","(",round(pc2*100,1),"%)",sep="")) +
my_theme()+
labs(color="Viral family",
shape="Baltimore class")
p3
ggsave("all_192_04_genomic_family_pca.pdf",width = 8, height = 6, units = "cm",dpi = 300)
###supplementary_figure1E
model3 <- lm(Dim.1 ~ family + host, data = pca_plot_data)
pc1_variance <- Anova(model3, type = "III")[[1]]/sum(Anova(model3, type = "III")[[1]])[1]
pc1_variance <- pc1_variance[2:3]
library(car)
###supplementary_figure1E
model3 <- lm(Dim.1 ~ family + host, data = pca_plot_data)
pc1_variance <- Anova(model3, type = "III")[[1]]/sum(Anova(model3, type = "III")[[1]])[1]
pc1_variance <- pc1_variance[2:3]
#pc2 partioning of variance (unbalanced design)
model4 <- lm(Dim.2 ~ family + host, data = pca_plot_data)
pc2_variance <- Anova(model4, type = "III")[[1]]/sum(Anova(model4, type = "III")[[1]])[1]
pc2_variance <- pc2_variance[2:3]
#pc3 partioning of variance (unbalanced design)
model5 <- lm(Dim.3 ~ family + host, data = pca_plot_data)
pc3_variance <- Anova(model5, type = "III")[[1]]/sum(Anova(model5, type = "III")[[1]])[1]
pca_plot_data <- as_tibble(get_pca_ind(pca_result)$coord) %>%
select("Dim.1", "Dim.2", "Dim.3") %>%
cbind(df_normalized[,1:(ncol(df_normalized)-192)])
###supplementary_figure1E
model3 <- lm(Dim.1 ~ family + host, data = pca_plot_data)
pc1_variance <- Anova(model3, type = "III")[[1]]/sum(Anova(model3, type = "III")[[1]])[1]
pc1_variance <- pc1_variance[2:3]
#pc2 partioning of variance (unbalanced design)
model4 <- lm(Dim.2 ~ family + host, data = pca_plot_data)
pc2_variance <- Anova(model4, type = "III")[[1]]/sum(Anova(model4, type = "III")[[1]])[1]
pc2_variance <- pc2_variance[2:3]
#pc3 partioning of variance (unbalanced design)
model5 <- lm(Dim.3 ~ family + host, data = pca_plot_data)
pc3_variance <- Anova(model5, type = "III")[[1]]/sum(Anova(model5, type = "III")[[1]])[1]
pc3_variance <- pc3_variance[2:3]
variance_df <- data.frame(variable=c("viral family","host"),
PC1=pc1_variance,
PC2=pc2_variance,
PC3=pc3_variance)
longer_variance_df <- variance_df %>% pivot_longer(!variable, names_to="pc_axis",values_to="proportion")
plot2 <- ggplot(longer_variance_df, aes(x = pc_axis , y = proportion, fill=variable)) +
geom_col(position = "dodge") +
scale_fill_npg(labels=c("Host", "Viral family"))+
# scale_x_discrete(labels = sorted_pc1_loading$trinuc)+
labs(x="PC dimensions",
y="Proportion of variance\n explained by a variable",
# title="Viral family",
fill="Variable")+
my_theme()
plot2
ggsave("family_variable_variance.pdf", plot2, width = 8, height = 6, units = "cm",dpi = 300)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure2/early_late_spectrum_merge_logratio.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure2/early_late_spectrum_merge_logratio.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure2/early_late_spectrum_merge_logratio.R", echo=TRUE)
###去除差的数据
df <- read_tsv("../../data/all_signature_sample_csv.txt") %>% filter(! order %in% c("ssRNA_+_", "ssRNA_-_")) %>% filter(host != "internal") %>%
rowwise()%>% mutate(start_year = suppressWarnings(as.numeric(strsplit(year, "-")[[1]][1])),
end_year = suppressWarnings(as.numeric(strsplit(year, "-")[[1]][2]))) %>%
na.omit() %>%
mutate(mean_between_years = mean(c(start_year, end_year))) %>%
select(c(start_year, end_year, mean_between_years), everything())
df_sars <- df %>% filter(species=="sars-cov-2") %>% arrange(mean_between_years)
sorted_df <- df_sars %>%
arrange(desc(`GUUU`)) %>% select(GUUU, everything())
df_sars_early <- df_sars %>% filter(mean_between_years <= 10) %>%
select((ncol(df_sars)-191):ncol(df_sars)) %>% colSums() %>% as.data.frame()
df_sars_early <- df_sars %>% filter(mean_between_years <= 10) %>%
select((ncol(df_sars)-191):ncol(df_sars)) %>% colSums() %>% as.data.frame()  %>%
mutate(across(starts_with("."), ~ . / sum(`.`))) %>%
mutate(MutationType=rownames(df_sars_early)) %>% rename("SARS-COV-2\n(early)"=".")
df_sars_late <- df_sars %>% filter(mean_between_years >= 38) %>%
select((ncol(df_sars)-191):ncol(df_sars)) %>% colSums() %>% as.data.frame()  %>%
mutate(across(starts_with("."), ~ . / sum(`.`))) %>%
mutate(MutationType=rownames(df_sars_early)) %>% rename("SARS-COV-2\n(late)"=".")
df_sars_ratio <- df_sars_late %>% right_join(df_sars_early)  %>%
mutate(log_ratio=log(`SARS-COV-2\n(late)`/`SARS-COV-2\n(early)`)) %>%
mutate(log_ratio=ifelse((`SARS-COV-2\n(late)`+`SARS-COV-2\n(early)`) <= 0.01,0,log_ratio)) %>%
filter(abs(log_ratio) >0 )
df_plot_sars <- df_sars_ratio %>% select("MutationType","log_ratio")
df_plot_sars$trinuc <- apply(df_plot_sars ,1,function(x){
return(paste0(substring(x["MutationType"],3,3),
"[",
substring(x["MutationType"],1,1),
">",
substring(x["MutationType"],2,2),
"]",
substring(x["MutationType"],4,4)))
})
trinuc_level <- c('A[C>U]A','A[C>U]C','A[C>U]G','A[C>U]U','C[C>U]A','C[C>U]C','C[C>U]G','C[C>U]U','G[C>U]A','G[C>U]C','G[C>U]G','G[C>U]U','U[C>U]A','U[C>U]C','U[C>U]G','U[C>U]U','A[G>A]A','A[G>A]C','A[G>A]G','A[G>A]U','C[G>A]A','C[G>A]C','C[G>A]G','C[G>A]U','G[G>A]A','G[G>A]C','G[G>A]G','G[G>A]U','U[G>A]A','U[G>A]C','U[G>A]G','U[G>A]U','A[A>G]A','A[A>G]C','A[A>G]G','A[A>G]U','C[A>G]A','C[A>G]C','C[A>G]G','C[A>G]U','G[A>G]A','G[A>G]C','G[A>G]G','G[A>G]U','U[A>G]A','U[A>G]C','U[A>G]G','U[A>G]U','A[U>C]A','A[U>C]C','A[U>C]G','A[U>C]U','C[U>C]A','C[U>C]C','C[U>C]G','C[U>C]U','G[U>C]A','G[U>C]C','G[U>C]G','G[U>C]U','U[U>C]A','U[U>C]C','U[U>C]G','U[U>C]U','A[G>U]A','A[G>U]C','A[G>U]G','A[G>U]U','C[G>U]A','C[G>U]C','C[G>U]G','C[G>U]U','G[G>U]A','G[G>U]C','G[G>U]G','G[G>U]U','U[G>U]A','U[G>U]C','U[G>U]G','U[G>U]U','A[C>A]A','A[C>A]C','A[C>A]G','A[C>A]U','C[C>A]A','C[C>A]C','C[C>A]G','C[C>A]U','G[C>A]A','G[C>A]C','G[C>A]G','G[C>A]U','U[C>A]A','U[C>A]C','U[C>A]G','U[C>A]U','A[G>C]A','A[G>C]C','A[G>C]G','A[G>C]U','C[G>C]A','C[G>C]C','C[G>C]G','C[G>C]U','G[G>C]A','G[G>C]C','G[G>C]G','G[G>C]U','U[G>C]A','U[G>C]C','U[G>C]G','U[G>C]U','A[C>G]A','A[C>G]C','A[C>G]G','A[C>G]U','C[C>G]A','C[C>G]C','C[C>G]G','C[C>G]U','G[C>G]A','G[C>G]C','G[C>G]G','G[C>G]U','U[C>G]A','U[C>G]C','U[C>G]G','U[C>G]U','A[A>C]A','A[A>C]C','A[A>C]G','A[A>C]U','C[A>C]A','C[A>C]C','C[A>C]G','C[A>C]U','G[A>C]A','G[A>C]C','G[A>C]G','G[A>C]U','U[A>C]A','U[A>C]C','U[A>C]G','U[A>C]U','A[U>G]A','A[U>G]C','A[U>G]G','A[U>G]U','C[U>G]A','C[U>G]C','C[U>G]G','C[U>G]U','G[U>G]A','G[U>G]C','G[U>G]G','G[U>G]U','U[U>G]A','U[U>G]C','U[U>G]G','U[U>G]U','A[A>U]A','A[A>U]C','A[A>U]G','A[A>U]U','C[A>U]A','C[A>U]C','C[A>U]G','C[A>U]U','G[A>U]A','G[A>U]C','G[A>U]G','G[A>U]U','U[A>U]A','U[A>U]C','U[A>U]G','U[A>U]U','A[U>A]A','A[U>A]C','A[U>A]G','A[U>A]U','C[U>A]A','C[U>A]C','C[U>A]G','C[U>A]U','G[U>A]A','G[U>A]C','G[U>A]G','G[U>A]U','U[U>A]A','U[U>A]C','U[U>A]G','U[U>A]U')
# paste(shQuote(df_plot_sars$trinuc), collapse = ",")
df_plot_sars$muttype <- apply(df_plot_sars,1,function(x){
return(paste0(substring(x["MutationType"],1,1),
">",
substring(x["MutationType"],2,2)))
})
# long_df_plot_sars <- df_plot_sars %>%
#   pivot_longer( cols = contains("Sars"),
#                 names_to = "signature",
#                 values_to = "exposure")
df_plot_sars$trinuc <- factor(df_plot_sars$trinuc,
levels=trinuc_level)
df_plot_sars$muttype <- factor(df_plot_sars$muttype,
levels=c("C>U","G>A","A>G","U>C",
"G>U","C>A","G>C","C>G",
"A>C","U>G","A>U","U>A"))
df_h3n2 <- df %>% filter(species=="InfluenzaAvirus_h3n2_") %>% arrange(mean_between_years)
sorted_df_h3n2 <- df_h3n2 %>%
arrange(desc(`CUAU`)) %>% select(CUAU, everything())
df_h3n2_early <- df_h3n2 %>% filter(mean_between_years <= 2004 && mean_between_years >= 2000) %>%
select((ncol(df_sars)-191):ncol(df_sars)) %>% colSums() %>% as.data.frame()  %>%
mutate(across(starts_with("."), ~ . / sum(`.`))) %>%
mutate(MutationType=rownames(df_sars_early)) %>% rename("H3N2\n(early)"=".")
df_h3n2_late <- df_h3n2 %>% filter(mean_between_years >= 2019 && mean_between_years <= 2023) %>%
select((ncol(df_sars)-191):ncol(df_sars)) %>% colSums() %>% as.data.frame()  %>%
mutate(across(starts_with("."), ~ . / sum(`.`))) %>%
mutate(MutationType=rownames(df_sars_late)) %>% rename("H3N2\n(late)"=".")
df_h3n2_ratio <- df_h3n2_late %>% right_join(df_h3n2_early)  %>%
mutate(log_ratio=log(`H3N2\n(late)`/`H3N2\n(early)`)) %>%
mutate(log_ratio=ifelse((`H3N2\n(early)`+`H3N2\n(late)`)<= 0.01,0,log_ratio)) %>%
filter(abs(log_ratio) >0 )
df_plot_h3n2 <- df_h3n2_ratio %>% select("MutationType","log_ratio")
df_plot_h3n2$muttype <- apply(df_plot_h3n2 ,1,function(x){
return(paste0(substring(x["MutationType"],1,1),
">",
substring(x["MutationType"],2,2)))
})
df_plot_h3n2$trinuc <- apply(df_plot_h3n2,1,function(x){
return(paste0(substring(x["MutationType"],3,3),
"[",
substring(x["MutationType"],1,1),
">",
substring(x["MutationType"],2,2),
"]",
substring(x["MutationType"],4,4)))
})
# long_df_plot_h3n2 <- df_plot_h3n2 %>%
#   pivot_longer( cols = contains("H3N2"),
#                 names_to = "signature",
#                 values_to = "exposure")
df_plot_h3n2$trinuc <- factor(df_plot_h3n2$trinuc,
levels=trinuc_level)
df_plot_h3n2$muttype <- factor(df_plot_h3n2$muttype,
levels=c("C>U","G>A","A>G","U>C",
"G>U","C>A","G>C","C>G",
"A>C","U>G","A>U","U>A"))
mypal <- pal_npg("nrc")(10)
mypal <- c(mypal, c("#4DAF4A" , "#999999" , "#A65628"))
###plot
plot_sars <- ggplot(data =df_plot_sars , aes(x = trinuc, y = log_ratio, fill = muttype)) +
geom_bar(stat = "identity") +
# facet_grid(signature ~ muttype, scales = "free_x", space = "free_x") +
theme_bw() +
ylab("Log-ratio of mutation frequencies between\nlate and early mutation spectrums") +
labs(title="SARS-COV-2",
fill = "Mutation type")+
scale_fill_manual(values = mypal) +
# scale_y_continuous(expand = c(0, 0, 0.05, 0)) +
my_theme()+
theme(
panel.spacing.x = unit(0, "lines"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
# axis.title.x = element_blank(),
panel.border = element_blank(),  # 去除绘图边框
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x =element_text(size = 7,angle = 90, hjust = 1),
axis.text.y =element_text(size = 7),
axis.title.y = element_text(size = 7),
plot.margin = margin(0, 0, 0, 0, "null"),
plot.title = element_text(hjust = 0.5, margin = margin(t = 0.1, unit = "cm"))
)
plot_sars
ggsave("sars_early_late_spectrum.pdf",width =16, height = 6, units = "cm",dpi = 300)
plot_h3n2 <- ggplot(data = df_plot_h3n2 , aes(x = trinuc, y = log_ratio, fill = muttype)) +
geom_bar(stat = "identity") +
# facet_grid(signature ~ muttype, scales = "free_x", space = "free_x") +
theme_bw() +
ylab("Log-ratio of mutation frequencies between\nlate and early mutation spectrums") +
labs(title="H3N2",
fill = "Mutation type")+
scale_fill_manual(values = mypal) +
coord_cartesian(ylim = c(-1,1))+
# scale_y_continuous(limit=c(-1,1) , expand = c(0, 0, 0.05, 0)) +
my_theme()+
theme(
panel.spacing.x = unit(0, "lines"),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
# axis.title.x = element_blank(),
panel.border = element_blank(),  # 去除绘图边框
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x =element_text(size = 7,angle = 90, hjust = 1),
axis.text.y =element_text(size = 7),
axis.title.y = element_text(size = 7),
plot.margin = margin(0, 0, 0, 0, "null"),
plot.title = element_text(hjust = 0.5, margin = margin(t = 0.1, unit = "cm"))
)
plot_h3n2
ggsave("h3n2_early_late_spectrum.pdf",width =16, height = 6, units = "cm",dpi = 300)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure3/draw_signature_nonsyn.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure3/draw_signature_syn.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure4/cluster_ggtree_family.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure4/cluster_ggtree_family.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure4/cluster_ggtree_family.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure4/cluster_ggtree_family.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure4/cluster_ggtree_speices.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure4/cluster_ggtree_speices.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure4/cluster_ggtree_family.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure4/cluster_ggtree_family.R", echo=TRUE)
tree
plot <- tree + geom_fruit(
data=infor_df,
geom=geom_tile,
width=1,
offset = 0.01,
mapping=aes(y=labels,fill=baltimore_class))+
# axis.params=list(
#   axis="x", text="family",
#   text.angle=90, hjust=3, text.size=3,
#   fontface="bold"))+
scale_fill_manual(values=species_color,
guide=guide_legend(title="Baltimore class",
keywidth=0.5, keyheight=0.5, order=3),
na.translate=FALSE)+
new_scale_fill()
infor_df <- data.frame(labels=hclust_signatures$labels)
infor_df <- infor_df %>% rowwise() %>%
mutate(species= strsplit(labels, "_")[[1]][1]) %>%
mutate(host= strsplit(labels, "_")[[1]][2]) %>%
mutate(host= host_dict[[host]]) %>%
mutate(labels = factor(labels, levels =labels(hclust_signatures))) %>%
mutate(baltimore_class= balti_dict[[species]])
clus <- cutree(hclust_signatures, h=0.15)
g <- split(names(clus), clus)
p <- ggtree(hclust_signatures,branch.length="none")
clades <- sapply(g, function(n) MRCA(p, n))
tree <- groupClade(p, clades, group_name='subtree') +aes(color=subtree)+
scale_color_manual(values=group_color)+
guides(color = "none")
tree
plot <- tree + geom_fruit(
data=infor_df,
geom=geom_tile,
width=1,
offset = 0.01,
mapping=aes(y=labels,fill=baltimore_class))+
# axis.params=list(
#   axis="x", text="family",
#   text.angle=90, hjust=3, text.size=3,
#   fontface="bold"))+
scale_fill_manual(values=species_color,
guide=guide_legend(title="Baltimore class",
keywidth=0.5, keyheight=0.5, order=3),
na.translate=FALSE)+
new_scale_fill()
source("~/Desktop/viral_signature/cluster_signature/family/cluster_ggtree_family.R", echo=TRUE)
source("~/Desktop/viral_signature/cluster_signature/family/cluster_ggtree_family.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure4/cluster_ggtree_family.R", echo=TRUE)
gc()
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure4/cluster_ggtree_family.R", echo=TRUE)
