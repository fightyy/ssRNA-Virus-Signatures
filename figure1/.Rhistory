pwd
print("eh")
library(siglasso)
library(this.path)
library(tidyverse)
setwd(this.dir())
# args <- commandArgs(trailingOnly = TRUE)
down <- 0.1
up <- 0.95
vcf2spec(
bedtools_path = "/opt/homebrew/bin/bedtools",
vcf_meta="sample_vcf_list.txt",
ref_genome="/Users/yueyang/Desktop/viral_isnv/06_HPV/NC_001526.fasta",
output_file="hpv16_spectrum.txt",
context_length = 1,
overwrite = T
)
standard_mutation <- c('CUAA', 'CUAC', 'CUAG', 'CUAU', 'CUCA', 'CUCC', 'CUCG', 'CUCU', 'CUGA', 'CUGC', 'CUGG', 'CUGU', 'CUUA', 'CUUC', 'CUUG', 'CUUU', 'GAAA', 'GAAC', 'GAAG', 'GAAU', 'GACA', 'GACC', 'GACG', 'GACU', 'GAGA', 'GAGC', 'GAGG', 'GAGU', 'GAUA', 'GAUC', 'GAUG', 'GAUU', 'AGAA', 'AGAC', 'AGAG', 'AGAU', 'AGCA', 'AGCC', 'AGCG', 'AGCU', 'AGGA', 'AGGC', 'AGGG', 'AGGU', 'AGUA', 'AGUC', 'AGUG', 'AGUU', 'UCAA', 'UCAC', 'UCAG', 'UCAU', 'UCCA', 'UCCC', 'UCCG', 'UCCU', 'UCGA', 'UCGC', 'UCGG', 'UCGU', 'UCUA', 'UCUC', 'UCUG', 'UCUU', 'GUAA', 'GUAC', 'GUAG', 'GUAU', 'GUCA', 'GUCC', 'GUCG', 'GUCU', 'GUGA', 'GUGC', 'GUGG', 'GUGU', 'GUUA', 'GUUC', 'GUUG', 'GUUU', 'CAAA', 'CAAC', 'CAAG', 'CAAU', 'CACA', 'CACC', 'CACG', 'CACU', 'CAGA', 'CAGC', 'CAGG', 'CAGU', 'CAUA', 'CAUC', 'CAUG', 'CAUU', 'GCAA', 'GCAC', 'GCAG', 'GCAU', 'GCCA', 'GCCC', 'GCCG', 'GCCU', 'GCGA', 'GCGC', 'GCGG', 'GCGU', 'GCUA', 'GCUC', 'GCUG', 'GCUU', 'CGAA', 'CGAC', 'CGAG', 'CGAU', 'CGCA', 'CGCC', 'CGCG', 'CGCU', 'CGGA', 'CGGC', 'CGGG', 'CGGU', 'CGUA', 'CGUC', 'CGUG', 'CGUU', 'ACAA', 'ACAC', 'ACAG', 'ACAU', 'ACCA', 'ACCC', 'ACCG', 'ACCU', 'ACGA', 'ACGC', 'ACGG', 'ACGU', 'ACUA', 'ACUC', 'ACUG', 'ACUU', 'UGAA', 'UGAC', 'UGAG', 'UGAU', 'UGCA', 'UGCC', 'UGCG', 'UGCU', 'UGGA', 'UGGC', 'UGGG', 'UGGU', 'UGUA', 'UGUC', 'UGUG', 'UGUU', 'AUAA', 'AUAC', 'AUAG', 'AUAU', 'AUCA', 'AUCC', 'AUCG', 'AUCU', 'AUGA', 'AUGC', 'AUGG', 'AUGU', 'AUUA', 'AUUC', 'AUUG', 'AUUU', 'UAAA', 'UAAC', 'UAAG', 'UAAU', 'UACA', 'UACC', 'UACG', 'UACU', 'UAGA', 'UAGC', 'UAGG', 'UAGU', 'UAUA', 'UAUC', 'UAUG', 'UAUU')
my_context_file <- read.table("hpv16_spectrum.txt")
colnames(my_context_file) <- c("context", "mutation", "sample")
str_dict <-setNames("U","T")
my_context_file2 <- my_context_file %>% rowwise() %>%
mutate(MutationType=paste0(substring(context,2,2),
mutation,
substring(context,1,1),
substring(context,3,3)
))
my_context_file2$MutationType <- gsub("T","U",my_context_file2$MutationType)
my_context_file3 <- my_context_file2 %>% group_by(sample,MutationType) %>%
summarise(value=n())
my_context_file4 <- my_context_file3 %>%
pivot_wider(names_from = MutationType, values_from = value)
for(col in standard_mutation) {
if(!col %in% colnames(my_context_file4)) {
my_context_file4[[col]] <- NA
}
}
my_context_file5 <- my_context_file4 %>%
select(all_of(c("sample",standard_mutation))) %>% replace_na()
my_context_file5[is.na(my_context_file5)] <- 0
sig_matrix <- t(my_context_file5)
sig_df <- as.data.frame(sig_matrix)
sig_df <- sig_df %>% mutate(MutationType=rownames(sig_df)) %>% select(MutationType,everything()) %>%
filter(sig_df, MutationType != "sample") %>% mutate(across(-MutationType, as.numeric))
sig_df <- sig_df %>% mutate(MutationType=rownames(sig_df)) %>% select(MutationType,everything()) %>%
filter(MutationType != "sample") %>% mutate(across(-MutationType, as.numeric))
write_csv(sig_df, paste0("hpv16_isnv","_", down, "_", up, "_sample",".csv"))
View(sig_df)
View(my_context_file5)
View(sig_matrix)
View(sig_matrix)
sig_df <- as.data.frame(sig_matrix)
sig_df <- sig_df %>% mutate(MutationType=rownames(sig_df)) %>% select(MutationType,everything()) %>%
filter(MutationType != "sample") %>% mutate(across(-MutationType, as.numeric))
View(sig_df)
View(sig_df)
View(my_context_file5)
sig_df <- as.data.frame(sig_matrix)
sig_df <- sig_df %>% mutate(MutationType=rownames(sig_df)) %>% select(MutationType,everything()) %>%
filter(MutationType != "sample") %>% mutate(across(-MutationType, as.numeric))
View(sig_df)
sig_df_sum <- sig_df %>%
mutate(count = rowSums(select(., -MutationType))) %>%
select(c(MutationType,count))
View(sig_df_sum)
View(sig_df)
sig_df <- as.data.frame(sig_matrix)
sig_df <- sig_df %>% mutate(MutationType=rownames(sig_df)) %>% select(MutationType,everything()) %>%
filter(sig_df, MutationType != "sample") %>% mutate(across(-MutationType, as.numeric))
View(sig_df)
sig_matrix <- t(my_context_file5)
sig_df <- as.data.frame(sig_matrix)
sig_df <- sig_df %>% mutate(MutationType=rownames(sig_df)) %>% select(MutationType,everything()) %>%
filter(sig_df, MutationType != "sample") %>% mutate(across(-MutationType, as.numeric))
sig_matrix <- t(my_context_file5)
sig_df <- as.data.frame(sig_matrix)
sig_df <- sig_df %>% mutate(MutationType=rownames(sig_df)) %>% select(MutationType,everything()) %>%
filter(MutationType != "sample") %>% mutate(across(-MutationType, as.numeric))
View(sig_df)
View(my_context_file5)
sig_df_sample <- sig_df %>% rename_with(~ c("MutationType",my_context_file5$sample))
View(sig_df_sample)
write_csv(sig_df, paste0("hpv16_isnv","_", down, "_", up, "_sample",".csv"))
write_csv(sig_df_sample, paste0("hpv16_isnv","_", down, "_", up, "_sample",".csv"))
sig_df_sum <- sig_df %>%
mutate(count = rowSums(select(., -MutationType))) %>%
select(c(MutationType,count))
write_csv(sig_df_sum, paste0("hpv16_isnv","_", down, "_", up, ".csv"))
source("~/Desktop/SDevo/晓东/driver_analysis.R", echo=TRUE)
source("~/Desktop/SDevo/晓东/driver_analysis.R", echo=TRUE)
source("~/Desktop/SDevo/晓东/deg_analyis.R", echo=TRUE)
Fig4e=ggplot(result_DT10)+geom_bar(aes(x=Description,y=qvalue,fill=fill),
stat = "identity",width = 0.3)+
scale_fill_manual(values =  RColorBrewer::brewer.pal(n = 3,"Set2"))+
scale_y_continuous(expand = c(0,0),
breaks=c(-5,0,10,20),labels = c(5,0,10,20))+
scale_y_break(c(5,18),scales = 0.5,ticklabels=c(20,30,40))+
coord_flip()+
scale_x_discrete()+
xlab("")+ggtitle(paste0("GO enrichment for ", patient, " (genetic_cluster1 VS 2)"))+
ylab("Enrichment significance (-log10 (q))")+ theme_classic()+
geom_hline(aes(yintercept=0),size=0.1)+
theme(panel.background = element_blank(),
legend.position = "none",
plot.title =  element_text(size=8,hjust = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size=8,hjust = 0.8),
axis.title.y = element_text(size=8,hjust = 0.5),
axis.text = element_text(size = 8),
axis.line = element_line(size = 0.3),
axis.ticks = element_line(size=0.3))
file_name <- paste("plot_",patient, "_deg.pdf", sep="")
pdf_files <- c(pdf_files, file_name)
ggsave(file_name, Fig4e, width = 9, height = 5)
Fig4e<- ggplot(result_DT10)+geom_bar(aes(x=Description,y=qvalue,fill=fill),
stat = "identity",width = 0.3)+
scale_fill_manual(values =  RColorBrewer::brewer.pal(n = 3,"Set2"))+
scale_y_continuous(expand = c(0,0),
breaks=c(-5,0,10,20),labels = c(5,0,10,20))+
scale_y_break(c(5,18),scales = 0.5,ticklabels=c(20,30,40))+
coord_flip()+
scale_x_discrete()+
xlab("")+ggtitle(paste0("GO enrichment for ", patient, " (genetic_cluster1 VS 2)"))+
ylab("Enrichment significance (-log10 (q))")+ theme_classic()+
geom_hline(aes(yintercept=0),size=0.1)+
theme(panel.background = element_blank(),
legend.position = "none",
plot.title =  element_text(size=8,hjust = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size=8,hjust = 0.8),
axis.title.y = element_text(size=8,hjust = 0.5),
axis.text = element_text(size = 8),
axis.line = element_line(size = 0.3),
axis.ticks = element_line(size=0.3))
file_name <- paste("plot_",patient, "_deg.pdf", sep="")
pdf_files <- c(pdf_files, file_name)
ggsave(file_name, Fig4e, width = 9, height = 5)
source("~/Desktop/SDevo/晓东/deg_analyis.R", echo=TRUE)
source("~/Desktop/SDevo/晓东/deg_analyis.R", echo=TRUE)
command <- paste("pdftk", paste(sprintf('"%s"', pdf_files), collapse = ' '), "cat output combined_plots.pdf")
system(command)
system('find ./ -type f -name "plot*" -exec rm {} \\;')
file_name <- paste("plot_",patient, "_deg.png", sep="")
ggsave(file_name, Fig4e, width = 9, height = 5)
gc()
gc()
###Figure4B
#Numbers of nonsynonymous and synonymous mutations explained by two mutational signatures in SARS-CoV-2
mutaion_signature_df <- read_tsv("De_Novo_MutationType_Probabilities.txt")
meta_df <- read_csv("all_meta_corrected_host.csv")
library(tidyverse)
library(this.path)
library(ggsci)
library(lsa)
library(ggpubr)
setwd(this.dir())
source("../bin/theme_setup.R")
###Figure4B
#Numbers of nonsynonymous and synonymous mutations explained by two mutational signatures in SARS-CoV-2
mutaion_signature_df <- read_tsv("../data/sars_De_Novo_MutationType_Probabilities.txt")
meta_df <- read_csv("all_meta_corrected_host.csv")
meta_df <- read_csv("../data/all_meta_corrected_host.csv")
sample_df <- read_table("orf1a_orf1b_sars_protein_sample.txt") %>% filter(sub_type != "sub_type")
sample_df <- read_table("sars_coding_mutation.txt") %>% filter(sub_type != "sub_type")
sample_df <- read_table("../data/sars_coding_mutation.txt") %>% filter(sub_type != "sub_type")
all_data_df <- meta_df %>% select(c("accession","date")) %>%
right_join(sample_df,by=c("accession"="accession")) %>% na.omit()
library(tidyverse)
library(this.path)
library(ggsci)
library(lsa)
library(ggpubr)
setwd(this.dir())
source("../bin/theme_setup.R")
all_data_df <- meta_df %>% select(c("accession","date")) %>%
right_join(sample_df,by=c("accession"="accession")) %>% na.omit()
gc()
library(tidyverse)
library(this.path)
library(ggsci)
library(lsa)
library(ggpubr)
setwd(this.dir())
source("../bin/theme_setup.R")
###Figure4B
#Numbers of nonsynonymous and synonymous mutations explained by two mutational signatures in SARS-CoV-2
mutaion_signature_df <- read_tsv("../data/sars_De_Novo_MutationType_Probabilities.txt")
meta_df <- read_csv("../data/all_meta_corrected_host.csv")
sample_df <- read_table("../data/sars_coding_mutation.txt") %>% filter(sub_type != "sub_type")
all_data_df <- meta_df %>% select(c("accession","date")) %>%
right_join(sample_df,by=c("accession"="accession")) %>% na.omit()
data_df_date <- all_data_df %>% mutate_at(vars("date"),list(date_obj = ~as.Date(., format = "%Y/%m/%d"))) %>%
mutate(days = as.numeric(date_obj - as.Date("2019-12-01"))) %>%  mutate(months=floor(days/30))
group_all_data_df <- data_df_date %>% group_by(months, mutation_type, sub_type) %>% summarise(count=n())
merged_df <- merge(group_all_data_df, mutaion_signature_df, by.x = c("months", "mutation_type"), by.y = c("Sample Names", "MutationType"))
group_merge_df <- merged_df %>% mutate(SBS192A = SBS192A * count, SBS192B = SBS192B * count) %>% group_by(sub_type) %>% na.omit() %>%
summarise(SBS192A = sum(SBS192A),SBS192B = sum(SBS192B))
result_df <- group_merge_df  %>%
pivot_longer(cols = -sub_type, names_to = "max_column", values_to = "value") %>%
pivot_wider(names_from = sub_type, values_from = value) %>% mutate(ratio = non_syn / syn)
write_csv(result_df, "sars_signature_assign.csv")
merged_df <- merge(group_all_data_df, mutaion_signature_df, by.x = c("months", "mutation_type"), by.y = c("Sample Names", "MutationType"))
group_merge_df <- merged_df %>% mutate(SBS192A = SBS192A * count, SBS192B = SBS192B * count) %>% group_by(sub_type) %>% na.omit() %>%
summarise(SBS192A = sum(SBS192A),SBS192B = sum(SBS192B))
result_df <- group_merge_df  %>%
pivot_longer(cols = -sub_type, names_to = "max_column", values_to = "value") %>%
pivot_wider(names_from = sub_type, values_from = value) %>% mutate(ratio = non_syn / syn)
result_df <- group_merge_df  %>%
pivot_longer(cols = -sub_type, names_to = "max_column", values_to = "value") %>%
pivot_wider(names_from = sub_type, values_from = value) %>% mutate(ratio = non_syn / syn)
longer_sars_df <- result_df %>% pivot_longer(!max_column, names_to = "category", values_to = "count")
View(longer_sars_df)
sars_exp_site <- read_tsv("../data/sars_exp_site.txt", col_names = F)[5,2][[1]]
sars_dnds <- wider_all_group_meta_max_df  %>% mutate(dnds = (`non_syn`/ syn)/sars_exp_site)
plot <- ggplot(longer_sars_df, aes(x = max_column, y = count, fill = category)) +
geom_col(position = "dodge") +
scale_fill_npg(labels=c("Nonsynonymous","Synonymous"))+
scale_x_discrete(labels=c("SARS-CoV-2\nsignatureA\n(early)","SARS-CoV-2\nsignatureB\n(late)"))+
my_theme()+
labs(y = "Count",
fill="Mutation type")+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
axis.title.x = element_blank(),
legend.title = element_blank(),
legend.margin = margin(t = -0.5 , l= -1.2, b= 0.1, unit = "cm")) +
guides(fill = guide_legend(nrow = 1))
longer_sars_df <- result_df %>% pivot_longer(!max_column, names_to = "category", values_to = "count")
sars_exp_site <- read_tsv("../data/sars_exp_site.txt", col_names = F)[5,2][[1]]
sars_dnds <- result_df  %>% mutate(dnds = (`non_syn`/ syn)/sars_exp_site)
plot <- ggplot(longer_sars_df, aes(x = max_column, y = count, fill = category)) +
geom_col(position = "dodge") +
scale_fill_npg(labels=c("Nonsynonymous","Synonymous"))+
scale_x_discrete(labels=c("SARS-CoV-2\nsignatureA\n(early)","SARS-CoV-2\nsignatureB\n(late)"))+
my_theme()+
labs(y = "Count",
fill="Mutation type")+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
axis.title.x = element_blank(),
legend.title = element_blank(),
legend.margin = margin(t = -0.5 , l= -1.2, b= 0.1, unit = "cm")) +
guides(fill = guide_legend(nrow = 1))
plot
View(longer_sars_df)
result_df <- group_merge_df  %>%
pivot_longer(cols = -sub_type, names_to = "max_column", values_to = "value") %>%
pivot_wider(names_from = sub_type, values_from = value)
longer_sars_df <- result_df %>% pivot_longer(!max_column, names_to = "category", values_to = "count")
sars_exp_site <- read_tsv("../data/sars_exp_site.txt", col_names = F)[5,2][[1]]
sars_dnds <- result_df  %>% mutate(dnds = (`non_syn`/ syn)/sars_exp_site)
plot <- ggplot(longer_sars_df, aes(x = max_column, y = count, fill = category)) +
geom_col(position = "dodge") +
scale_fill_npg(labels=c("Nonsynonymous","Synonymous"))+
scale_x_discrete(labels=c("SARS-CoV-2\nsignatureA\n(early)","SARS-CoV-2\nsignatureB\n(late)"))+
my_theme()+
labs(y = "Count",
fill="Mutation type")+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
axis.title.x = element_blank(),
legend.title = element_blank(),
legend.margin = margin(t = -0.5 , l= -1.2, b= 0.1, unit = "cm")) +
guides(fill = guide_legend(nrow = 1))
plot
###Figure4E
#Numbers of nonsynonymous and synonymous mutations explained by two mutational signatures in H3N2
sample_df <- read_table("../data/h3n2_coding_mutation.txt")
sig_df <- read_table("h3n2_De_Novo_MutationType_Probabilities.txt")
###Figure4E
#Numbers of nonsynonymous and synonymous mutations explained by two mutational signatures in H3N2
sample_df <- read_table("../data/h3n2_coding_mutation.txt")
sig_df <- read_table("../data/h3n2_De_Novo_MutationType_Probabilities.txt")
sig_df <- read_tsv("../data/h3n2_De_Novo_MutationType_Probabilities.txt")
standard_mutation <- c('CUAA', 'CUAC', 'CUAG', 'CUAU', 'CUCA', 'CUCC', 'CUCG', 'CUCU', 'CUGA', 'CUGC', 'CUGG', 'CUGU', 'CUUA', 'CUUC', 'CUUG', 'CUUU', 'GAAA', 'GAAC', 'GAAG', 'GAAU', 'GACA', 'GACC', 'GACG', 'GACU', 'GAGA', 'GAGC', 'GAGG', 'GAGU', 'GAUA', 'GAUC', 'GAUG', 'GAUU', 'AGAA', 'AGAC', 'AGAG', 'AGAU', 'AGCA', 'AGCC', 'AGCG', 'AGCU', 'AGGA', 'AGGC', 'AGGG', 'AGGU', 'AGUA', 'AGUC', 'AGUG', 'AGUU', 'UCAA', 'UCAC', 'UCAG', 'UCAU', 'UCCA', 'UCCC', 'UCCG', 'UCCU', 'UCGA', 'UCGC', 'UCGG', 'UCGU', 'UCUA', 'UCUC', 'UCUG', 'UCUU', 'GUAA', 'GUAC', 'GUAG', 'GUAU', 'GUCA', 'GUCC', 'GUCG', 'GUCU', 'GUGA', 'GUGC', 'GUGG', 'GUGU', 'GUUA', 'GUUC', 'GUUG', 'GUUU', 'CAAA', 'CAAC', 'CAAG', 'CAAU', 'CACA', 'CACC', 'CACG', 'CACU', 'CAGA', 'CAGC', 'CAGG', 'CAGU', 'CAUA', 'CAUC', 'CAUG', 'CAUU', 'GCAA', 'GCAC', 'GCAG', 'GCAU', 'GCCA', 'GCCC', 'GCCG', 'GCCU', 'GCGA', 'GCGC', 'GCGG', 'GCGU', 'GCUA', 'GCUC', 'GCUG', 'GCUU', 'CGAA', 'CGAC', 'CGAG', 'CGAU', 'CGCA', 'CGCC', 'CGCG', 'CGCU', 'CGGA', 'CGGC', 'CGGG', 'CGGU', 'CGUA', 'CGUC', 'CGUG', 'CGUU', 'ACAA', 'ACAC', 'ACAG', 'ACAU', 'ACCA', 'ACCC', 'ACCG', 'ACCU', 'ACGA', 'ACGC', 'ACGG', 'ACGU', 'ACUA', 'ACUC', 'ACUG', 'ACUU', 'UGAA', 'UGAC', 'UGAG', 'UGAU', 'UGCA', 'UGCC', 'UGCG', 'UGCU', 'UGGA', 'UGGC', 'UGGG', 'UGGU', 'UGUA', 'UGUC', 'UGUG', 'UGUU', 'AUAA', 'AUAC', 'AUAG', 'AUAU', 'AUCA', 'AUCC', 'AUCG', 'AUCU', 'AUGA', 'AUGC', 'AUGG', 'AUGU', 'AUUA', 'AUUC', 'AUUG', 'AUUU', 'UAAA', 'UAAC', 'UAAG', 'UAAU', 'UACA', 'UACC', 'UACG', 'UACU', 'UAGA', 'UAGC', 'UAGG', 'UAGU', 'UAUA', 'UAUC', 'UAUG', 'UAUU')
complement_mutation <- c('GAUU', 'GAGU', 'GACU', 'GAAU', 'GAUG', 'GAGG', 'GACG', 'GAAG', 'GAUC', 'GAGC', 'GACC', 'GAAC', 'GAUA', 'GAGA', 'GACA', 'GAAA', 'CUUU', 'CUGU', 'CUCU', 'CUAU', 'CUUG', 'CUGG', 'CUCG', 'CUAG', 'CUUC', 'CUGC', 'CUCC', 'CUAC', 'CUUA', 'CUGA', 'CUCA', 'CUAA', 'UCUU', 'UCGU', 'UCCU', 'UCAU', 'UCUG', 'UCGG', 'UCCG', 'UCAG', 'UCUC', 'UCGC', 'UCCC', 'UCAC', 'UCUA', 'UCGA', 'UCCA', 'UCAA', 'AGUU', 'AGGU', 'AGCU', 'AGAU', 'AGUG', 'AGGG', 'AGCG', 'AGAG', 'AGUC', 'AGGC', 'AGCC', 'AGAC', 'AGUA', 'AGGA', 'AGCA', 'AGAA', 'CAUU', 'CAGU', 'CACU', 'CAAU', 'CAUG', 'CAGG', 'CACG', 'CAAG', 'CAUC', 'CAGC', 'CACC', 'CAAC', 'CAUA', 'CAGA', 'CACA', 'CAAA', 'GUUU', 'GUGU', 'GUCU', 'GUAU', 'GUUG', 'GUGG', 'GUCG', 'GUAG', 'GUUC', 'GUGC', 'GUCC', 'GUAC', 'GUUA', 'GUGA', 'GUCA', 'GUAA', 'CGUU', 'CGGU', 'CGCU', 'CGAU', 'CGUG', 'CGGG', 'CGCG', 'CGAG', 'CGUC', 'CGGC', 'CGCC', 'CGAC', 'CGUA', 'CGGA', 'CGCA', 'CGAA', 'GCUU', 'GCGU', 'GCCU', 'GCAU', 'GCUG', 'GCGG', 'GCCG', 'GCAG', 'GCUC', 'GCGC', 'GCCC', 'GCAC', 'GCUA', 'GCGA', 'GCCA', 'GCAA', 'UGUU', 'UGGU', 'UGCU', 'UGAU', 'UGUG', 'UGGG', 'UGCG', 'UGAG', 'UGUC', 'UGGC', 'UGCC', 'UGAC', 'UGUA', 'UGGA', 'UGCA', 'UGAA', 'ACUU', 'ACGU', 'ACCU', 'ACAU', 'ACUG', 'ACGG', 'ACCG', 'ACAG', 'ACUC', 'ACGC', 'ACCC', 'ACAC', 'ACUA', 'ACGA', 'ACCA', 'ACAA', 'UAUU', 'UAGU', 'UACU', 'UAAU', 'UAUG', 'UAGG', 'UACG', 'UAAG', 'UAUC', 'UAGC', 'UACC', 'UAAC', 'UAUA', 'UAGA', 'UACA', 'UAAA', 'AUUU', 'AUGU', 'AUCU', 'AUAU', 'AUUG', 'AUGG', 'AUCG', 'AUAG', 'AUUC', 'AUGC', 'AUCC', 'AUAC', 'AUUA', 'AUGA', 'AUCA', 'AUAA')
# sig_df$MutationsType <- complement_mutation
mutation_dict <- setNames(complement_mutation, standard_mutation)
df <- df %>%  rowwise() %>% mutate(mutation_type=mutation_dict[[mutation_type]])
###Figure4E
#Numbers of nonsynonymous and synonymous mutations explained by two mutational signatures in H3N2
df <- read_table("../data/h3n2_coding_mutation.txt")
df <- df %>%  rowwise() %>% mutate(mutation_type=mutation_dict[[mutation_type]])
meta_df <- read_csv("all_history.csv") %>% select(Isolate_Id, Collection_Date, revised_history)
meta_df <- read_csv("../data/all_meta_corrected_host.csv")
all_df <- df %>% left_join(meta_df,by=c("accession"="accession"))
View(all_df)
###Figure4E
#Numbers of nonsynonymous and synonymous mutations explained by two mutational signatures in H3N2
df <- read_table("../data/h3n2_coding_mutation.txt") %>% filter(accession != "internal")
all_df <- df %>% left_join(meta_df,by=c("accession"="accession"))
View(all_df)
#max_df <- df %>% left_join(max_sig_df,by=c("mutation_type"= "MutationsType") )
group_df <- all_df  %>% group_by(mutation_type, year, sub_type) %>% summarise(count=n()) %>% filter(year>=2000)
merged_df <- merge(group_df, mutaion_signature_df, by.x = c("year", "mutation_type"), by.y = c("Sample Names", "MutationType"))
group_merge_df <- merged_df %>% mutate(SBS192A = SBS192A * count, SBS192B = SBS192B * count, SBS192C = SBS192C * count) %>% group_by(sub_type) %>%
summarise(SBS192A = sum(SBS192A),
SBS192B = sum(SBS192B),
SBS192C = sum(SBS192C))
View(longer_sars_df)
View(group_df)
View(group_df)
merged_df <- merge(group_df, sig_df, by.x = c("year", "mutation_type"), by.y = c("Sample Names", "MutationType"))
group_merge_df <- merged_df %>% mutate(SBS192A = SBS192A * count, SBS192B = SBS192B * count, SBS192C = SBS192C * count) %>% group_by(sub_type) %>%
summarise(SBS192A = sum(SBS192A),
SBS192B = sum(SBS192B),
SBS192C = sum(SBS192C))
result_df <- group_merge_df  %>%
pivot_longer(cols = -sub_type, names_to = "max_column", values_to = "value") %>%
pivot_wider(names_from = sub_type, values_from = value)
longer_h3n2_df <- result_df %>% pivot_longer(!max_column, names_to = "category", values_to = "count")
h3n2_exp_site <- read_tsv("../data/h3n2_exp_site.txt", col_names = F)[5,2][[1]]
h3n2_dnds <- wider_all_group_meta_max_df %>% mutate(dnds = (`non_syn`/ syn)/h3n2_exp_site)
h3n2_dnds <- result_df  %>% mutate(dnds = (`non_syn`/ syn)/h3n2_exp_site)
plot <- ggplot(longer_h3n2_df, aes(x = max_column, y = count, fill = category)) +
geom_col(position = "dodge") +
scale_fill_npg(labels=c("Nonsynonymous","Synonymous"))+
scale_x_discrete(labels=c("H3N2   \nsignatureA","H3N2   \nsignatureB\n(late)","H3N2   \nsignatureC\n(early)"))+
my_theme()+
labs(y = "Count",
fill="Mutation type")+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
axis.title.x = element_blank(),
legend.title = element_blank(),
legend.margin = margin(t = -0.5 , l= -1.2, b= 0.1, unit = "cm")) +
guides(fill = guide_legend(nrow = 1))
plot
View(result_df)
#max_df <- df %>% left_join(max_sig_df,by=c("mutation_type"= "MutationsType") )
group_df <- all_df  %>% group_by(mutation_type, year, sub_type) %>% summarise(count=n()) %>% filter(year>=1999)
merged_df <- merge(group_df, sig_df, by.x = c("year", "mutation_type"), by.y = c("Sample Names", "MutationType"))
group_merge_df <- merged_df %>% mutate(SBS192A = SBS192A * count, SBS192B = SBS192B * count, SBS192C = SBS192C * count) %>% group_by(sub_type) %>%
summarise(SBS192A = sum(SBS192A),
SBS192B = sum(SBS192B),
SBS192C = sum(SBS192C))
result_df <- group_merge_df  %>%
pivot_longer(cols = -sub_type, names_to = "max_column", values_to = "value") %>%
pivot_wider(names_from = sub_type, values_from = value)
View(result_df)
View(all_df)
View(meta_df)
# sig_df$MutationsType <- complement_mutation
mutation_dict <- setNames(complement_mutation, standard_mutation)
df <- df %>%  rowwise() %>% mutate(mutation_type=mutation_dict[[mutation_type]])
all_df <- df %>% left_join(meta_df,by=c("accession"="accession"))
#max_df <- df %>% left_join(max_sig_df,by=c("mutation_type"= "MutationsType") )
group_df <- all_df  %>% group_by(mutation_type, year, sub_type) %>% summarise(count=n()) %>% filter(year>=2000)
merged_df <- merge(group_df, sig_df, by.x = c("year", "mutation_type"), by.y = c("Sample Names", "MutationType"))
group_merge_df <- merged_df %>% mutate(SBS192A = SBS192A * count, SBS192B = SBS192B * count, SBS192C = SBS192C * count) %>% group_by(sub_type) %>%
summarise(SBS192A = sum(SBS192A),
SBS192B = sum(SBS192B),
SBS192C = sum(SBS192C))
result_df <- group_merge_df  %>%
pivot_longer(cols = -sub_type, names_to = "max_column", values_to = "value") %>%
pivot_wider(names_from = sub_type, values_from = value)
longer_h3n2_df <- result_df %>% pivot_longer(!max_column, names_to = "category", values_to = "count")
h3n2_exp_site <- read_tsv("../data/h3n2_exp_site.txt", col_names = F)[5,2][[1]]
h3n2_dnds <- result_df  %>% mutate(dnds = (`non_syn`/ syn)/h3n2_exp_site)
plot <- ggplot(longer_h3n2_df, aes(x = max_column, y = count, fill = category)) +
geom_col(position = "dodge") +
scale_fill_npg(labels=c("Nonsynonymous","Synonymous"))+
scale_x_discrete(labels=c("H3N2   \nsignatureA","H3N2   \nsignatureB\n(late)","H3N2   \nsignatureC\n(early)"))+
my_theme()+
labs(y = "Count",
fill="Mutation type")+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
axis.title.x = element_blank(),
legend.title = element_blank(),
legend.margin = margin(t = -0.5 , l= -1.2, b= 0.1, unit = "cm")) +
guides(fill = guide_legend(nrow = 1))
plot
View(result_df)
###Figure4B
#Numbers of nonsynonymous and synonymous mutations explained by two mutational signatures in SARS-CoV-2
mutaion_signature_df <- read_tsv("../data/sars_De_Novo_MutationType_Probabilities.txt")
meta_df <- read_csv("../data/all_meta_corrected_host.csv")
sample_df <- read_table("../data/sars_coding_mutation.txt") %>% filter(sub_type != "sub_type") %>% filter(accession != "internal")
all_data_df <- meta_df %>% select(c("accession","date")) %>%
right_join(sample_df,by=c("accession"="accession")) %>% na.omit()
data_df_date <- all_data_df %>% mutate_at(vars("date"),list(date_obj = ~as.Date(., format = "%Y/%m/%d"))) %>%
mutate(days = as.numeric(date_obj - as.Date("2019-12-01"))) %>%  mutate(months=floor(days/30))
group_all_data_df <- data_df_date %>% group_by(months, mutation_type, sub_type) %>% summarise(count=n())
merged_df <- merge(group_all_data_df, mutaion_signature_df, by.x = c("months", "mutation_type"), by.y = c("Sample Names", "MutationType"))
group_merge_df <- merged_df %>% mutate(SBS192A = SBS192A * count, SBS192B = SBS192B * count) %>% group_by(sub_type) %>% na.omit() %>%
summarise(SBS192A = sum(SBS192A),SBS192B = sum(SBS192B))
result_df <- group_merge_df  %>%
pivot_longer(cols = -sub_type, names_to = "max_column", values_to = "value") %>%
pivot_wider(names_from = sub_type, values_from = value)
longer_sars_df <- result_df %>% pivot_longer(!max_column, names_to = "category", values_to = "count")
sars_exp_site <- read_tsv("../data/sars_exp_site.txt", col_names = F)[5,2][[1]]
sars_dnds <- result_df  %>% mutate(dnds = (`non_syn`/ syn)/sars_exp_site)
plot <- ggplot(longer_sars_df, aes(x = max_column, y = count, fill = category)) +
geom_col(position = "dodge") +
scale_fill_npg(labels=c("Nonsynonymous","Synonymous"))+
scale_x_discrete(labels=c("SARS-CoV-2\nsignatureA\n(early)","SARS-CoV-2\nsignatureB\n(late)"))+
my_theme()+
labs(y = "Count",
fill="Mutation type")+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
axis.title.x = element_blank(),
legend.title = element_blank(),
legend.margin = margin(t = -0.5 , l= -1.2, b= 0.1, unit = "cm")) +
guides(fill = guide_legend(nrow = 1))
plot
View(result_df)
###Figure4F
#dn/ds for signatures in H3N2
plot <- ggplot(h3n2_dnds, aes(x = max_column, y = dnds)) +
geom_col(fill="lightblue",width = 0.7) +
scale_fill_npg(labels=c("Nonsynonymous","Synonymous"))+
scale_x_discrete(labels=c("H3N2   \nsignatureA","H3N2   \nsignatureB\n(late)","H3N2   \nsignatureC\n(early)"))+
my_theme()+
labs(y = "Dn/ds")+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank())+
geom_hline(yintercept = 1, linetype = "dashed", color = "black") +
annotate("text", x = 2, y = 0.95, label = "Neutral", size = 7/.pt)
plot
gc()
source("~/project/ssRNA-Virus-Signatures/figure4/figure4.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/figure4/figure4.R", echo=TRUE)
ggplot(df_long, aes(x = category, y = frequency, group = group)) +
geom_boxplot(aes(group = category, color=category), linewidth = 0.1, outlier.shape = NA, fatten = 0)+
stat_summary(fun = mean, geom = "crossbar", width = 0.75, color = "black", size = 0.5, aes(group = category))+
scale_color_npg()+
scale_x_discrete(labels = c("Donor", "Recipient")) +
geom_point( aes(group = category, color=category), size = 0.1) +
geom_line(aes(group = group), linewidth=0.05) +
annotate("text",
x = 1, y = max(df_long$frequency) + 0.15,
label = paste0("p-value : ", format(wilcox_test_result$p.value, digits = 3)),
hjust = 0, vjust = 1, size = 7 /.pt,
family="Arial")+
labs(
y = "iSNV frequency",
title = "Synonymous") +
my_theme()+
theme(
axis.title.x = element_blank(),
plot.title = element_text(margin=margin(t= 0.1, unit="cm")),
axis.text.x = element_text(margin=margin(b= 0.1, unit="cm")),
legend.position = "none")
ggsave("Figure4I.pdf",width = 4.5, height = 6, units = "cm",dpi = 300)
source("~/project/ssRNA-Virus-Signatures/figure4/figure4.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure8/suppl_figure8.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure8/suppl_figure8.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure2/figure1.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure2/figure1.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure2/figure1.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure2/figure1.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure2/figure1.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/supplementary_figure/figure2/figure1.R", echo=TRUE)
source("~/project/ssRNA-Virus-Signatures/figure1/figure1.R", echo=TRUE)
gc()
